/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.addon.user.myapplication;

import android.support.v4.view.GravityCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.design.widget.NavigationView;
import android.view.Gravity;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.database.sqlite.SQLiteDatabase;
import android.view.View;
import java.util.ArrayList;

import com.addon.user.myapplication.layout.ErgLayout;
import com.addon.user.myapplication.layout.HomeLayout;
import com.addon.user.myapplication.layout.MusicLayout;
import com.addon.user.myapplication.view.NoticeItem;
import android.content.Intent;
import android.support.v4.widget.DrawerLayout;
import android.os.Bundle;
import android.content.Context;
import android.util.DisplayMetrics;
import android.support.v7.widget.Toolbar;
import android.support.v7.app.ActionBarDrawerToggle;
import android.widget.ScrollView;
import com.addon.user.myapplication.layout.NoticeLayout;
import android.view.Menu;
import android.view.MenuItem;
import com.addon.user.myapplication.layout.TitleLayout;
import com.addon.user.myapplication.layout.TradeLayout;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdSize;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.MobileAds;

public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
    private long backKeyPressedTime;
    DBHelper dbHelper;
    public int deviceHeight;
    public int deviceWidth;
    public static MainActivity thisActivity;
    private Toast toast;
    public SQLiteDatabase tradeDb;

    private TextView toolbarTitleView;
    
    public MainActivity() {
        backKeyPressedTime = 0;
        deviceWidth = 0;
        deviceHeight = 0;
    }
    
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        thisActivity = this;

        dbHelper = new DBHelper(getApplicationContext(), "tradeItem.db", null, 3);
        tradeDb = dbHelper.getReadableDatabase();


        DisplayMetrics displayMetrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
        deviceWidth = displayMetrics.widthPixels;
        deviceHeight = displayMetrics.heightPixels;
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        toolbarTitleView = (TextView) findViewById(R.id.toolbar_title);
        setSupportActionBar(toolbar);

        DrawerLayout drawer = (DrawerLayout)findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView)findViewById(R.id.nav_view);
        navigationView.setItemIconTintList(null);
        navigationView.setNavigationItemSelectedListener(this);

        RelativeLayout contentView = (RelativeLayout) findViewById(R.id.contentView);
        if(contentView != null) {
            contentView.removeAllViews();
        }

        HomeLayout homeLayout = new HomeLayout(this);
        contentView.addView(homeLayout);
        homeLayout.initialization(null);
        homeLayout.setData(null);

        toolbarTitleView.setText("마비노기 유틸도우미");

        // 광고
        MobileAds.initialize(this, getString(R.string.ad_unit_id));

        AdView mAdView = findViewById(R.id.adView);
        AdRequest adRequest = new AdRequest.Builder().build();
        mAdView.loadAd(adRequest);
        mAdView.setAdListener(new AdListener() {
            @Override
            public void onAdLoaded() {
                // Code to be executed when an ad finishes loading.
            }

            @Override
            public void onAdFailedToLoad(int errorCode) {
                // Code to be executed when an ad request fails.
            }

            @Override
            public void onAdOpened() {
                // Code to be executed when an ad opens an overlay that
                // covers the screen.
            }

            @Override
            public void onAdLeftApplication() {
                // Code to be executed when the user has left the app.
            }

            @Override
            public void onAdClosed() {
                // Code to be executed when when the user is about to return
                // to the app after tapping on an ad.
            }
        });
    }
    
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if(drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(Gravity.START);
            return;
        }
        if(System.currentTimeMillis() > (backKeyPressedTime + 2000)) {
            backKeyPressedTime = System.currentTimeMillis();
            showGuide();
            return;
        }
        if(System.currentTimeMillis() <= (backKeyPressedTime + 2000)) {
            finish();
            toast.cancel();
        }
    }
    
    public void showGuide() {
        toast = Toast.makeText(this, "앱 종료를 하시려면 '뒤로 가기'를 한번 더 눌러주십시오.", Toast.LENGTH_SHORT);
        toast.show();
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if(id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    
    public boolean onNavigationItemSelected(MenuItem item) {
        int id = item.getItemId();
        RelativeLayout contentView = (RelativeLayout) findViewById(R.id.contentView);

        if(id == R.id.nav_notice) {
            if(contentView != null) {
                contentView.removeAllViews();
            }
            HomeLayout homeLayout = new HomeLayout(this);
            contentView.addView(homeLayout);
            homeLayout.initialization(null);
            homeLayout.setData(null);

            toolbarTitleView.setText("마비노기 유틸도우미");
        }else if(id == R.id.nav_erg) {
            if(contentView != null) {
                contentView.removeAllViews();
            }
            ErgLayout ergLayout = new ErgLayout(this);
            contentView.addView(ergLayout);
            ergLayout.setData(tradeDb, null);
            ergLayout.initialization(null);

            toolbarTitleView.setText("에르그도우미");
        }else if(id == R.id.nav_trade) {
            if(contentView != null) {
                contentView.removeAllViews();
            }
            TradeLayout tradeLayout = new TradeLayout(this);
            contentView.addView(tradeLayout);
            tradeLayout.initialization(null);
            tradeLayout.setData(tradeDb, null);
            tradeLayout.tradeLayoutAdd();

            toolbarTitleView.setText("교역도우미");
        }else if(id == R.id.nav_music) {
            if(contentView != null) {
                contentView.removeAllViews();
            }
            MusicLayout musicLayout = new MusicLayout(this);
            contentView.addView(musicLayout);
            musicLayout.initialization(null);
            musicLayout.setData(tradeDb, null);

            toolbarTitleView.setText("연주도우미");
        }

        /*
        else if(id == R.id.nav_title) {
            if (contentView != null) {
                contentView.removeAllViews();
            }
            TitleLayout titleLayout = new TitleLayout(this);
            contentView.addView(titleLayout);
            titleLayout.setData(tradeDb, null);
            titleLayout.initialization(null);
        }*/

        DrawerLayout drawer = (DrawerLayout)findViewById(R.id.drawer_layout);
        drawer.closeDrawer(Gravity.START);
        return true;
    }
    
    public void noticeDetail(int position, View view, ArrayList arrayList) {
        NoticeItem noticeItem = (NoticeItem)arrayList.get(position);
        Intent intent = new Intent(this, DetailActivity.class);
        intent.putExtra("noticeItem", noticeItem);
        startActivity(intent);
    }
}
