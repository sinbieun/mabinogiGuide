/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.addon.user.myapplication.layout;

import android.app.AlertDialog;
import android.view.LayoutInflater;
import android.widget.ArrayAdapter;
import java.util.ArrayList;

import com.addon.user.myapplication.R;
import com.addon.user.myapplication.view.TitleItem;
import android.widget.LinearLayout;
import android.widget.ListView;
import com.addon.user.myapplication.MainActivity;
import com.addon.user.myapplication.view.TitleAdapter;
import android.database.sqlite.SQLiteDatabase;
import android.content.Context;
import android.widget.ListAdapter;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.database.Cursor;
import android.widget.AdapterView;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;

public class TitleLayout extends BaseLinearLayout {
    ArrayAdapter<CharSequence> adspinCategory;
    ArrayAdapter<CharSequence> adspinKind;
    ArrayAdapter<CharSequence> adspinStat;
    ArrayAdapter<CharSequence> adspinTrans;
    public ArrayList<TitleItem> arrayList;
    public LinearLayout layout;
    public ListView listView;
    public MainActivity mainActivity;
    public TitleAdapter titleAdapter;
    SQLiteDatabase titleDb;
    
    public TitleLayout(Context context) {
        super(context);
    }
    CharSequence adspinKindStr = "";
    CharSequence adspinStatStr = "";
    CharSequence adspinTransStr = "";
    CharSequence adspinCategoryStr = "";
    String titleNameStr = "";
    
    public void initialization(Object[] obj) {
        layout = (LinearLayout)getView(R.layout.title_layout);
        addView(layout);
        listView = (ListView)findViewById(R.id.titleListView);
        arrayList = new ArrayList();
        Button searchBtn = (Button)findViewById(R.id.searchBtn);
        searchBtn.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
                setListVIew();
            }
        });
        setSpinnerValue();
        setListVIew();
    }
    
    public void setListVIew() {
        arrayList.clear();
        TextView titleNameEditText = (TextView)findViewById(R.id.titleNameEditText);
        titleNameStr = String.valueOf(titleNameEditText.getText());
        String sql = "";
        if((!adspinKindStr.equals("")) && (!adspinKindStr.equals("분류 선택"))) {
            sql = sql + " AND A.titleKind = \'" + adspinKindStr + "\'";
        }
        if((!adspinStatStr.equals("")) && (!adspinStatStr.equals("능력치 선택"))) {
            sql = sql + " AND B.titleStat = \'" + adspinStatStr + "\'";
        }
        if((!adspinTransStr.equals("")) && (!adspinTransStr.equals("전체"))) {
            sql = sql + " AND B.titleTrans = \'" + adspinTransStr + "\'";
        }
        if((!adspinCategoryStr.equals("")) && (!adspinCategoryStr.equals("카테고리 선택"))) {
            sql = sql + " AND A.titleCategory = \'" + adspinCategoryStr + "\'";
        }
        if(!titleNameStr.equals("")) {
            sql = sql + " AND A.titleName = \'" + titleNameStr + "\'";
        }
        sql = sql + " GROUP BY A.titleId";
        sql = sql + " LIMIT 0, 10";
        Cursor cursor = titleDb.rawQuery(sql, null);
        while(cursor.moveToNext()) {
            TitleItem titleItem = new TitleItem();
            titleItem.setTitleId(cursor.getInt(0));
            titleItem.setTitleName("[" + cursor.getString(3) + "] " + cursor.getString(1));
            titleItem.setTitleKind(cursor.getString(2));
            String[] titleStatArray = cursor.getString(4).split(",");
            String[] titleTransArray = cursor.getString(5).split(",");
            String[] titleTransIntArray = cursor.getString(6).split(",");
            String titleArrayFinish = "";
            for(int i = 0; i < titleStatArray.length; i++) {
                if(i == 0) {
                    titleArrayFinish = titleStatArray[i] + " " + titleTransIntArray[i] + " " + titleTransArray[i];
                    continue;
                }
                titleArrayFinish = titleArrayFinish + "\n" + titleStatArray[i] + " " + titleTransIntArray[i] + " " + titleTransArray[i];
            }
            titleItem.setTitleSecondString(titleArrayFinish);
            arrayList.add(titleItem);
            break;
        }
        titleAdapter = new TitleAdapter(getContext(), arrayList);
        listView.setAdapter(titleAdapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            
            public void onItemClick(AdapterView parent, View view, int position, long id) {
                /*TextView idView = (TextView)view.findViewById(R.id.titleIdView);
                String subSql = "SELECT A.titleName, A.titleKind, A.titleCategory, A.beforeComment, A.afterComment, A.howGet, group_concat(B.titleStat), group_concat(B.titleTrans), group_concat(B.titleTransInt) FROM TITLEFIRST A INNER JOIN TITLESECOND B ON A.titleId = B.titleId WHERE 1=1 AND A.titleId = " + idView.getText();
                Cursor cursor = titleDb.rawQuery(subSql, null);
                TitleItem titleItem = new TitleItem();
                while(cursor.moveToNext()) {
                    titleItem.setTitleName("[" + cursor.getString(2) + "] " + cursor.getString(0));
                }
                Context mContext = getContext();
                LayoutInflater inflater = (LayoutInflater)mContext.getSystemService("layout_inflater");
                View layout = inflater.inflate(0x7f040045, (ViewGroup)findViewById(0x7f0e00a8));
                AlertDialog.Builder aDialog = new AlertDialog.Builder(getContext());
                aDialog.setTitle(titleItem.getTitleName());
                aDialog.setView(layout);
                AlertDialog ad = aDialog.create();
                ad.show();
                ad.setCancelable(true);
                ad.getWindow().setLayout(Math.round((float)((MainActivity.thisActivity.deviceWidth / 30) * 27)), Math.round((float)((MainActivity.thisActivity.deviceHeight / 10) * 9)));*/
            }
        });
        ViewGroup.LayoutParams params = listView.getLayoutParams();
        params.height = (MainActivity.thisActivity.deviceHeight - (MainActivity.thisActivity.deviceHeight / 0x7));
        listView.setLayoutParams(params);
        listView.requestLayout();
    }
    
    public void setSpinnerValue() {
        Spinner kindSpinner = (Spinner)findViewById(R.id.titleKindSpinner);
        adspinKind = ArrayAdapter.createFromResource(context, R.array.titleSelected1, R.layout.support_simple_spinner_dropdown_item);
        adspinKind.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
        kindSpinner.setAdapter(adspinKind);
        kindSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                adspinKindStr = (String) adspinKind.getItem(position);
            }
            
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
        Spinner categorySpinner = (Spinner)findViewById(R.id.titleCategorySpinner);
        adspinCategory = ArrayAdapter.createFromResource(context, R.array.titleSelected2, R.layout.support_simple_spinner_dropdown_item);
        adspinCategory.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
        categorySpinner.setAdapter(adspinCategory);
        categorySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                adspinCategoryStr = (String)adspinCategory.getItem(position);
            }
            
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
        Spinner statSpinner = (Spinner)findViewById(R.id.titleStatSpinner);
        adspinStat = ArrayAdapter.createFromResource(context, R.array.titleSelected3, R.layout.support_simple_spinner_dropdown_item);
        adspinStat.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
        statSpinner.setAdapter(adspinStat);
        statSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                adspinStatStr = (String)adspinStat.getItem(position);
            }
            
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
        Spinner transSpinner = (Spinner)findViewById(R.id.titleTransSpinner);
        adspinTrans = ArrayAdapter.createFromResource(context, R.array.titleSelected4, R.layout.support_simple_spinner_dropdown_item);
        adspinTrans.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);
        transSpinner.setAdapter(adspinTrans);
        transSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                adspinTransStr = (String)adspinTrans.getItem(position);
            }
            
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
    }
    
    public static void setListViewHeightBasedOnChildren(ListView listView) {
        ListAdapter listAdapter = listView.getAdapter();
        if(listAdapter == null) {
            return;
        }
        int totalHeight = 0;
        int desiredWidth = View.MeasureSpec.makeMeasureSpec(listView.getWidth(), View.MeasureSpec.EXACTLY);
        for(int i = 0; i < (listAdapter.getCount() - 1); i++) {
            View listItem = listAdapter.getView(i, null, listView);
            listItem.measure(desiredWidth, 0);
            totalHeight += listItem.getMeasuredHeight();
        }
        ViewGroup.LayoutParams params = listView.getLayoutParams();
        params.height = (totalHeight - (listView.getDividerHeight() * (listAdapter.getCount() - 1)));
        listView.setLayoutParams(params);
        listView.requestLayout();
    }
    
    public void setData(SQLiteDatabase db, Object[] obj) {
        titleDb = db;
    }
    
    public void setData(Object[] obj) {
    }
}
